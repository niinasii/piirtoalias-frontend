{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\academyjs\\\\loppuprojekti\\\\frontend\\\\piirtoalias-frontend\\\\src\\\\components\\\\ChatViesti.js\";\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React, { Component } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport io from 'socket.io-client';\n\nvar ChatViesti = function (_Component) {\n  _inherits(ChatViesti, _Component);\n\n  var _super = _createSuper(ChatViesti);\n\n  function ChatViesti(props) {\n    var _this;\n\n    _classCallCheck(this, ChatViesti);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      chatMessage: \"\",\n      chatMessages: []\n    };\n    return _this;\n  }\n\n  _createClass(ChatViesti, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.socket = io('http://192.168.1.5:3000/');\n      this.socket.on(\"chat message\", function (msg) {\n        _this2.setState({\n          chatMessages: [].concat(_toConsumableArray(_this2.state.chatMessages), [msg])\n        });\n      });\n    }\n  }, {\n    key: \"submitChatMessage\",\n    value: function submitChatMessage() {\n      this.socket.emit('chat message', this.state.chatMessage);\n      this.setState({\n        chatMessage: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var chatMessages = this.state.chatMessages.map(function (chatMessage) {\n        return React.createElement(Text, {\n          key: chatMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 69\n          }\n        }, chatMessage);\n      });\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          height: 40,\n          borderWidth: 2\n        },\n        autoCorrect: false,\n        value: this.state.chatMessage,\n        onSubmitEditing: function onSubmitEditing() {\n          return _this3.submitChatMessage();\n        },\n        onChangeText: function onChangeText(chatMessage) {\n          _this3.setState({\n            chatMessage: chatMessage\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }), chatMessages);\n    }\n  }]);\n\n  return ChatViesti;\n}(Component);\n\nexport { ChatViesti as default };","map":{"version":3,"sources":["C:/academyjs/loppuprojekti/frontend/piirtoalias-frontend/src/components/ChatViesti.js"],"names":["React","Component","io","ChatViesti","props","state","chatMessage","chatMessages","socket","on","msg","setState","emit","map","height","borderWidth","submitChatMessage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,EAAP,MAAe,kBAAf;;IAEqBC,U;;;;;AACjB,sBAAYC,KAAZ,EAAoB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAFgB;AAMnB;;;;wCAEgB;AAAA;;AACjB,WAAKC,MAAL,GAAcN,EAAE,CAAC,0BAAD,CAAhB;AACA,WAAKM,MAAL,CAAYC,EAAZ,CAAe,cAAf,EAA+B,UAAAC,GAAG,EAAK;AACnC,QAAA,MAAI,CAACC,QAAL,CAAc;AAACJ,UAAAA,YAAY,+BAAM,MAAI,CAACF,KAAL,CAAWE,YAAjB,IAA+BG,GAA/B;AAAb,SAAd;AACH,OAFD;AAGH;;;wCAEmB;AACpB,WAAKF,MAAL,CAAYI,IAAZ,CAAiB,cAAjB,EAAiC,KAAKP,KAAL,CAAWC,WAA5C;AACA,WAAKK,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAE;AAAf,OAAd;AACC;;;6BAEY;AAAA;;AACT,UAAMC,YAAY,GAAG,KAAKF,KAAL,CAAWE,YAAX,CAAwBM,GAAxB,CAA4B,UAAAP,WAAW;AAAA,eAAI,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBA,WAAzB,CAAJ;AAAA,OAAvC,CAArB;AACI,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,SAAD;AACA,QAAA,KAAK,EAAE;AAACQ,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,WAAW,EAAE;AAA1B,SADP;AAEA,QAAA,WAAW,EAAE,KAFb;AAGA,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,WAHlB;AAIA,QAAA,eAAe,EAAE;AAAA,iBAAK,MAAI,CAACU,iBAAL,EAAL;AAAA,SAJjB;AAKA,QAAA,YAAY,EAAE,sBAAAV,WAAW,EAAI;AACzB,UAAA,MAAI,CAACK,QAAL,CAAc;AAACL,YAAAA,WAAW,EAAXA;AAAD,WAAd;AACH,SAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAUKC,YAVL,CADJ;AAcH;;;;EArCmCN,S;;SAAnBE,U","sourcesContent":["import React, { Component } from 'react'\r\nimport { TextInput, Text, View } from 'react-native'\r\nimport io from 'socket.io-client'\r\n\r\nexport default class ChatViesti extends Component {\r\n    constructor(props)  {\r\n        super(props);\r\n        this.state = {\r\n            chatMessage: \"\",\r\n            chatMessages: []\r\n        };\r\n    }\r\n\r\ncomponentDidMount () {\r\n    this.socket = io('http://192.168.1.5:3000/')\r\n    this.socket.on(\"chat message\", msg  => {\r\n        this.setState({chatMessages: [...this.state.chatMessages, msg]})\r\n    })\r\n}\r\n\r\nsubmitChatMessage() {\r\nthis.socket.emit('chat message', this.state.chatMessage)\r\nthis.setState({ chatMessage: \"\" })\r\n}\r\n\r\n    render() {\r\n    const chatMessages = this.state.chatMessages.map(chatMessage => <Text key={chatMessage}>{chatMessage}</Text>)\r\n        return (\r\n            <View>\r\n\r\n                <TextInput \r\n                style={{height: 40, borderWidth: 2}}\r\n                autoCorrect={false}\r\n                value={this.state.chatMessage}\r\n                onSubmitEditing={()=> this.submitChatMessage()}\r\n                onChangeText={chatMessage => {\r\n                    this.setState({chatMessage})\r\n                }}/>\r\n                {chatMessages}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}